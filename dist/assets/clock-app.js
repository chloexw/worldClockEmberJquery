eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"clock-app/adapters/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    var ApplicationAdapter = DS.LSAdapter.extend({\n       namespace: \'api/v1\'\n    });\n\n    __exports__[\"default\"] = ApplicationAdapter;\n  });//# sourceURL=clock-app/adapters/application.js");

;eval("define(\"clock-app/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: \'clock-app\', // TODO: loaded via config\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, \'clock-app\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=clock-app/app.js");

;eval("define(\"clock-app/components/canvas-clock\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    /*\n    Reference: http://mrbool.com/how-to-create-an-analog-clock-with-html5/26976\n    */\n\n    var CanvasClockComponent = Ember.Component.extend({\n      tagName: \'canvas\',\n      width: 70,\n      height: 70,\n      font: 0,\n      thick: 0,\n      x: 0,\n      Hx: 0,\n      r: 0,\n      Hr: 0,\n      ctx: 0,\n\n      setProperty: function() {\n      	var width = this.get(\'width\');\n      	var radius = width/2;\n    	this.set(\'font\', width/8); \n    	this.set(\'thick\', width/36);\n    	this.set(\'x\', width/5);\n    	this.set(\'Hx\', width/11);\n    	this.set(\'r\', radius);\n    	this.set(\'Hr\', width/2 - width/9);\n    	this.set(\'ctx\', this.get(\'element\').getContext(\'2d\'));\n        this.createClock();\n      }.on(\'didInsertElement\'),\n      \n      createClock: function() {\n        var context = this.get(\'ctx\');\n        context.fillStyle = \'#fff\';\n        context.fillRect(0, 0, this.get(\'width\'), this.get(\'height\'));\n        context.font = this.get(\'font\')+\'px Arial\'; \n\n    	var timetext = this.get(\'data\');\n    	var timepart = timetext.split(\" \")[0];\n    	this.set(\'ampm\', timetext.split(\" \")[1]);\n    	this.set(\'hour\', timepart.split(\":\")[0]);\n    	this.set(\'minute\', timepart.split(\":\")[1]);\n    	this.set(\'seconds\', timepart.split(\":\")[2]);\n    	this.set(\'millisec\', timepart.split(\":\")[3]);\n     	\n    	this.createClockHelper();\n      }.observes(\'data\'),\n      \n\n      createClockHelper: function() { \n      	var context = this.get(\'ctx\'),\n    	hour = this.get(\'hour\'),\n    	ampm = this.get(\'ampm\');\n      	context.beginPath(); \n    	context.arc(this.get(\'width\')/2, this.get(\'height\')/2, this.get(\'r\'), 0, Math.PI*2, true); \n        context.fillStyle = \'#efefef\';\n    	if (((hour >= 6 && hour!==\'12\') && ampm === \'PM\')|| ((hour<6 || hour===\'12\') && ampm === \'AM\')){\n    			context.fillStyle = \'black\';\n    	}\n        context.fill();\n        this.drawhands();\n    	this.createnos();\n      },\n      \n      createnos: function() { \n    	var ampm = this.get(\'ampm\'),\n    	hour = this.get(\'hour\'),\n    	angle = 0, \n    	nowidth = 0,\n    	width = this.get(\'width\'),\n    	height = this.get(\'height\'),\n    	font = this.get(\'font\'),\n    	Hr = this.get(\'Hr\'),\n    	context = this.get(\'ctx\');\n    	context.fillStyle = \'black\';\n    	if (((hour >= 6 && hour!==\'12\') && ampm === \'PM\')|| ((hour<6 || hour===\'12\') && ampm === \'AM\')){\n    			context.fillStyle = \'white\';\n    	}\n    	for (var i=1; i<=12; i++) {\n    		angle = Math.PI/6 * (i-3); \n    		nowidth = context.measureText(i).width;\n    		context.fillText(i,width/2 + Math.cos(angle)*Hr - nowidth/2, height/2 + Math.sin(angle)*Hr + font/3); \n    	}\n    	context.beginPath(); \n    	context.arc(width/2, height/2, this.get(\'thick\'), 0, Math.PI*2, true); \n    	context.fillStyle = \'black\';\n    	if (((hour >= 6 && hour!==\'12\') && ampm === \'PM\')|| ((hour<6 || hour===\'12\') && ampm === \'AM\')){\n    		context.fillStyle = \'white\';\n    	}\n    	context.fill(); \n      }, \n      \n      drawhand: function (loc, handType) { \n        var context = this.get(\'ctx\'),\n    	ampm = this.get(\'ampm\'),\n    	hour = this.get(\'hour\'),\n        width = this.get(\'width\'),\n        height = this.get(\'height\'),\n        millisec = this.get(\'millisec\'),\n        thick = this.get(\'thick\'),\n    	angle = (Math.PI*2)*(loc/60) - Math.PI/2, \n    	handRadius = handType === \'hour\'?this.get(\'r\')-this.get(\'x\')-this.get(\'Hx\'):this.get(\'r\')-this.get(\'x\');\n        	\n    	context.beginPath();\n    	if (handType === \'second\'){\n    	    handRadius = handRadius - thick;\n    	    angle = angle + (Math.PI*2/60)*(millisec/1000);\n            context.lineWidth = thick/2;\n    		context.strokeStyle = \'red\';\n    	}\n    	else{\n    		context.lineWidth = thick;\n    		context.strokeStyle = \'black\';\n    		if (((hour >= 6 && hour!==\'12\') && ampm === \'PM\')|| ((hour<6 || hour===\'12\') && ampm === \'AM\')){\n    			context.strokeStyle = \'white\';\n    		}\n    	}\n    	context.moveTo(width/2, height/2); \n    	context.lineTo(width/2 + Math.cos(angle)*handRadius, height/2 + Math.sin(angle)*handRadius); \n    	context.stroke(); \n      },\n      \n      drawhands: function() { \n      	this.drawhand(this.get(\'hour\')*5 + (this.get(\'minute\')/60)*5, \'hour\',0.5);\n        this.drawhand(this.get(\'minute\'), \'minute\',0.5); \n    	this.drawhand(this.get(\'seconds\'), \'second\',0.2);\n      }\n    });\n\n    __exports__[\"default\"] = CanvasClockComponent;\n  });//# sourceURL=clock-app/components/canvas-clock.js");

;eval("define(\"clock-app/controllers/addcity\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var addcityController = Ember.Controller.extend({\n      cityList: null,\n      letter: \'\',\n      displayMsg: \'Please type to find a city.\',\n      displayList: function() {\n        var input = this.get(\'typeCity\');\n        if (input.length > 0) {\n          if (input.length == 1) {\n            this.set(\'displayMsg\', \'Keep typing...\');\n            this.set(\'letter\', \'\');\n            this.set(\'cityList\', null);\n          } else {\n            //get the auto input array\n            var self = this;\n            //reset to null for a new input\n            this.set(\'cityList\', null);\n            $.ajax({\n              url: \'http://coen268.peterbergstrom.com/timezones.php?search=\'+input,\n              dataType: \'jsonp\',\n              jsonp: \"callback\",\n              success: function(data) {\n                if (data == null || data.length == 0) {\n                  self.set(\'displayMsg\', \'No results found, try another city.\');\n                } else {\n                  self.createMap(data);\n                }\n              }\n            });\n          }\n        } else {\n          this.set(\'letter\', \'\');\n          this.set(\'cityList\', null);\n          this.set(\'displayMsg\', \'Please type to find a city.\');\n        }\n      }.observes(\'typeCity\'),\n\n      createMap: function(data) {\n        var len = data.length;\n        var map = new Object();\n        for (var i=0; i<len; i++) {\n          var firstLetter = data[i].cityName.charAt(0);\n          if (!map[\"hasOwnProperty\"](firstLetter)) {\n            map[firstLetter] = {\n              firstLetter: firstLetter,\n              dataList: [data[i]]\n            };\n          } else {\n            map[firstLetter].dataList.pushObject(data[i]);\n          }\n        }\n        var result = [];\n        for (var m in map) {\n          result.pushObject(map[m]);\n        }\n        this.set(\'cityList\', result);\n      },\n\n      actions: {\n        addCity: function (cityId) {\n          //create a new city model\n          var cityList = this.get(\'cityList\');\n          var cityArray = cityList.findBy(\'firstLetter\', cityId.charAt(0).toUpperCase());\n          var cityObject = cityArray.dataList.findBy(\'id\', cityId);\n        \n          var curr = this.store.createRecord(\'city\', {\n            cityid: cityId,\n            cityName: cityObject.cityName,\n            timezoneName: cityObject.timezoneName,\n            timezoneOffset: cityObject.timezoneOffset\n          });\n          curr.save();\n          //reset to null\n          this.set(\'cityList\', null);\n          this.set(\'typeCity\', \'\');\n          this.transitionToRoute(\'worldclock\');\n        },\n        worldclock: function() {\n          //reset to null\n          this.set(\'cityList\', null);\n          this.set(\'typeCity\', \'\');\n          this.transitionTo(\'worldclock\');\n        }\n      }\n    });\n\n    __exports__[\"default\"] = addcityController;\n  });//# sourceURL=clock-app/controllers/addcity.js");

;eval("define(\"clock-app/controllers/stopwatch\", \n  [\"ember\",\"clock-app/controllers/utils\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Utils = __dependency2__[\"default\"];\n\n    var StopwatchController = Ember.ArrayController.extend({\n      \n      isRunning: false,\n      isStopped: false,\n      \n      startTime:       null,\n      lapTime:         null,\n      ellapsedTime:    0,\n      ellapsedLapTime: 0,\n      timeInterval:    10,\n      \n      totalTimeFormatted:      \'00:00.00\',\n      currentLapTimeFormatted: \'00:00.00\',\n      \n      content: Ember.A(),\n      \n      leftButtonClass: function() {\n        if (this.get(\'isRunning\')) {\n          return \'button-stop\';\n        }\n        return \'button-start\';\n      }.property(\'isRunning\'),\n      \n      leftButtonLabel: function() {\n        if (this.get(\'isRunning\')) {\n          return \'Stop\';\n        }\n        return \'Start\';\n      }.property(\'isRunning\'),\n\n      rightButtonClass: function() {\n        if (this.get(\'isRunning\')) {\n          return \'button-lap\';\n        }\n        return \'button-reset\';\n      }.property(\'isRunning\'),\n\n      rightButtonLabel: function() {\n        if (this.get(\'isRunning\') || (!this.get(\'isStopped\') && !this.get(\'isRunning\'))) {\n          return \'Lap\';\n        }\n        return \'Reset\';\n      }.property(\'isRunning\', \'isStopped\'),\n\n      rightButtonDisabled: function() {\n        return !(this.get(\'isRunning\') || this.get(\'isStopped\'));\n      }.property(\'isRunning\', \'isStopped\'),\n\n      actions: {\n        leftButton: function() {\n          if(this.get(\'isRunning\')) {\n            this.stop();\n          } else {\n            this.start();\n          }\n        },\n        \n        rightButton: function() {\n          if(this.get(\'isRunning\')) {\n            this.lap();\n          } else {\n            this.reset();\n          }\n        }\n      },\n      \n      start: function() {\n        this.set(\'startTime\', new Date().getTime() - this.get(\'ellapsedTime\'))\n            .set(\'lapTime\',   new Date().getTime() - this.get(\'ellapsedLapTime\'))\n            .set(\'isRunning\', true)\n            .set(\'isStopped\', false);\n\n        this.handleTimer();\n      },\n      \n      stop: function() {\n        this.set(\'isRunning\', false)\n            .set(\'isStopped\', true);\n      },\n      \n      \n      lap: function() {\n        var lap = Ember.Object.create({\n                      lapLabel: \"Lap %@\".fmt(this.get(\'content.length\')+1),\n                      lapTime:  this.formatTimeFromMilliseconds(new Date().getTime()-this.get(\'lapTime\'))\n                  });\n                      \n        this.insertAt(0, lap);\n        this.set(\'lapTime\', new Date().getTime());\n      },\n      \n      reset: function() {\n        this.set(\'ellapsedTime\',            0)\n            .set(\'ellapsedLapTime\',         0)\n            .set(\'isRunning\',               false)\n            .set(\'isStopped\',               false)\n            .set(\'totalTimeFormatted\',      this.formatTimeFromMilliseconds(0))\n            .set(\'currentLapTimeFormatted\', this.formatTimeFromMilliseconds(0))\n            .set(\'content\',                 Ember.A());\n            \n      },\n      \n      handleTimer: function() {\n        var now       = new Date().getTime(),\n            startTime = this.get(\'startTime\'),\n            lapTime   = this.get(\'lapTime\');\n            \n        this.set(\'totalTimeFormatted\',      this.formatTimeFromMilliseconds(now-startTime))\n            .set(\'currentLapTimeFormatted\', this.formatTimeFromMilliseconds(now-lapTime))\n            .set(\'ellapsedTime\',            now-startTime)\n            .set(\'ellapsedLapTime\',         now-lapTime);\n        \n        if(this.get(\'isRunning\')) {\n          Ember.run.later(this, function() {\n            this.handleTimer();\n          },  this.get(\'timeInterval\'));\n        }\n      },\n      \n      formatTimeFromMilliseconds: function(milliseconds) {\n        var minutes = parseInt((milliseconds / 60 / 1000),10),\n            seconds = parseInt(milliseconds / 1000, 10) - minutes*60,\n            tenths  = parseInt((milliseconds - seconds*1000 - minutes*60000)/10, 10);\n\n        return Utils.addZeroes(minutes)  + \":\" + Utils.addZeroes(seconds) + \".\" + Utils.addZeroes(tenths); \n      }\n    });\n\n\n    __exports__[\"default\"] = StopwatchController;\n  });//# sourceURL=clock-app/controllers/stopwatch.js");

;eval("define(\"clock-app/controllers/utils\", \n  [\"exports\"],\n  function(__exports__) {\n    \"use strict\";\n    var Utils = {\n      addZeroes: function(value) {\n        if(value < 10) {\n          return \'0\'+value;\n        }\n        return value;\n      }\n    };\n\n    __exports__[\"default\"] = Utils;\n  });//# sourceURL=clock-app/controllers/utils.js");

;eval("define(\"clock-app/controllers/timer\", \n  [\"ember\",\"clock-app/controllers/utils\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Utils = __dependency2__[\"default\"];\n\n    var TimerController = Ember.Controller.extend({\n\n      hours:     0,\n      minutes:   0,\n      totalTime: \'00:00\',\n      timeLeft:  0,\n      \n      snoozeDuration: 10 * 1000 * 60, // 10 min\n      timeInterval:   1000,\n\n      isRunning:      false,\n      isPaused:       false,\n\n      leftButtonClass: function() {\n        if (this.get(\'isRunning\') || this.get(\'isPaused\')) {\n          return \'button-cancel\';\n        }\n        return \'button-start\';\n      }.property(\'isRunning\', \'isPaused\'),\n      \n      leftButtonLabel: function() {\n        if (this.get(\'isRunning\') || this.get(\'isPaused\')) {\n          return \'Cancel\';\n        }\n        return \'Start\';\n      }.property(\'isRunning\', \'isPaused\'),\n\n      rightButtonClass: function() {\n        if (this.get(\'isPaused\')) {\n          return \'button-resume\';\n        }\n        return \'button-pause\';\n      }.property(\'isPaused\'),\n\n      rightButtonLabel: function() {\n        if (this.get(\'isPaused\')) {\n          return \'Resume\';\n        }\n        return \'Pause\';\n      }.property(\'isPaused\'),\n\n      rightButtonDisabled: function() {\n        return !(this.get(\'isRunning\') || this.get(\'isPaused\'));\n      }.property(\'isRunning\', \'isPaused\'),\n      \n      hideInputs: function() {\n        return this.get(\'isRunning\') || this.get(\'isPaused\');\n      }.property(\'isRunning\', \'isPaused\'),\n      \n      actions: {\n        leftButton: function() {\n          if(this.get(\'isRunning\') || this.get(\'isPaused\')) {\n            this.cancel();\n          } else {\n            this.start();\n          }\n        },\n\n        rightButton: function() {\n          if(this.get(\'isRunning\')) {\n            this.pause();\n          } else {\n            this.resume();\n          }\n        }\n      },\n\n      start: function() {\n\n        var timerDurationInMilliseconds = (this.get(\'hours\') * 3600000) +  (this.get(\'minutes\') * 60000);\n\n        if(timerDurationInMilliseconds !== 0) {\n          this.set(\'timeLeft\',  timerDurationInMilliseconds)\n              .set(\'isRunning\', true)\n              .set(\'isPaused\',  false);\n\n          this.handleTimer();\n        }\n      },\n\n      cancel: function() {\n        this.set(\'isRunning\', false)\n            .set(\'isPaused\',  false)\n            .set(\'timeLeft\',  0);\n      },\n\n      pause: function() {\n        this.set(\'isRunning\', false)\n            .set(\'isPaused\',  true); \n      },\n\n      resume: function() {\n\n        if(!this.get(\'rightButtonDisabled\')) {\n\n          this.set(\'isRunning\', true)\n              .set(\'isPaused\',  false);\n                               \n          this.handleTimer();\n        }\n      },\n\n      alarm: function() {\n        var turnedOff = confirm(\"Alarm! If you want to snooze, press cancel.\");\n\n        if(!turnedOff) {\n          this.set(\'timeLeft\',this.snoozeDuration); // 10 minutes\n          this.handleTimer();\n        } else {\n          this.cancel();\n        }\n      },\n\n      handleTimer: function() {\n\n        if(this.get(\'isRunning\')) {\n          var timeLeft    = this.get(\'timeLeft\'),\n              newTimeLeft = timeLeft-this.get(\'timeInterval\');\n\n          this.set(\'timeLeft\', newTimeLeft);\n          if(newTimeLeft <= 0) {\n            this.alarm();\n            return;\n          }\n\n          this.set(\'totalTime\', this.formatTimeFromMilliseconds(newTimeLeft));\n\n          Ember.run.later(this, function() {\n            this.handleTimer();\n          },  this.get(\'timeInterval\'));\n        }\n      },\n      formatTimeFromMilliseconds: function(milliseconds) {\n        var hours   = parseInt(milliseconds / 3600000, 10),\n            minutes = parseInt(milliseconds / 60000, 10) - hours*60,\n            seconds = parseInt(milliseconds / 1000, 10) - minutes*60 - hours*3600,\n            ret     = \'\';\n\n        if(hours !== 0) {\n          ret += hours + \':\';\n        }\n\n        ret += Utils.addZeroes(minutes) + \':\' + Utils.addZeroes(seconds);\n\n        return ret;\n      }\n\n    });\n\n\n    __exports__[\"default\"] = TimerController;\n  });//# sourceURL=clock-app/controllers/timer.js");

;eval("define(\"clock-app/controllers/worldclock\", \n  [\"ember\",\"clock-app/controllers/utils\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Utils = __dependency2__[\"default\"];\n\n    var WorldclockController = Ember.ArrayController.extend({\n\n      timerInterval: 1000/6,\n      timer: null,\n      edit: false,\n      canvas: false,\n\n      actions: {\n        editCity: function() {\n          var curr = this.get(\'edit\');\n          this.set(\'edit\', !curr);\n        },\n        doneEdit: function() {\n          this.set(\'edit\', false);\n        },\n        \"delete\": function(id) {\n          this.store.find(\'city\', id).then(function (book) {\n              book.deleteRecord();\n              book.save();\n          });\n        },\n        addcity: function() {\n          this.transitionTo(\'addcity\');\n        },\n        displayCanvas: function() {\n          var curr = this.get(\'canvas\');\n          this.set(\'canvas\', !curr);\n        }\n      },\n\n      contentDidChange: function() {\n        this.updateCityInfo();\n      }.observes(\'content\'),\n\n      updateCityInfo: function() {\n        var content = this.get(\'content\');\n        content = content.toArray();\n        \n        for (var i=0, iLen=content.length; i<iLen; i++) {\n          this.updateTimeForCity(content[i]);\n        }\n\n        // cancel any other timers that might be assigned since the last time\n        Ember.run.cancel(this.get(\'timer\'));\n        this.set(\'timer\', Ember.run.later(this, \'updateCityInfo\', this.get(\'timerInterval\')));\n      },\n\n      updateTimeForCity: function(city) {\n        var myTime       = new Date(),\n            utcTime      = new Date(new Date().setMinutes(new Date().getMinutes()+myTime.getTimezoneOffset())),\n            cityTime     = new Date(new Date(utcTime.getTime()).setMinutes(new Date().getMinutes()+city.get(\'timezoneOffset\'))),\n            isToday      = cityTime.getDate() === myTime.getDate(),\n            isTomorrow   = cityTime.getDate() > myTime.getDate() || cityTime.getMonth() > myTime.getMonth() || cityTime.getFullYear() > myTime.getFullYear(),\n            hourTimeDiff = parseInt((cityTime.getTime() - myTime.getTime()) / (1000 * 60 * 60),10),\n            fmtString    = \'%@ hour%@ ahead\';\n\n        if(hourTimeDiff <  0) {\n          fmtString = \'%@ hour%@ behind\';\n          hourTimeDiff *= -1;\n        } else if(hourTimeDiff === 0) {\n          fmtString = \'\';\n        }\n        \n        var diffString = fmtString.fmt(hourTimeDiff, hourTimeDiff !== 1 ? \'s\' : \'\'),\n            localTime  = \'\',\n            localTime2 = \'\',\n            hours      = cityTime.getHours(),\n            millisec   = cityTime.getMilliseconds(),\n            seconds    = cityTime.getSeconds(),\n            minutes    = cityTime.getMinutes();\n\n        if (hours > 11) {\n          if (hours > 12) {\n            hours = hours - 12;\n          }\n          localTime = hours + \':\' + Utils.addZeroes(minutes) + \' PM\';\n          localTime2 = hours + \':\' + minutes + \':\' + seconds + \':\' + millisec + \' PM\';\n        } else {\n          // If it is midnight, show it as 12 instead of 0.\n          if(hours === 0) {\n            hours = 12;\n          }\n          localTime = hours + \':\' + Utils.addZeroes(minutes) + \' AM\';\n          localTime2 = hours + \':\' + minutes + \':\' + seconds + \':\' + millisec + \' AM\';\n        }\n        Ember.set(city, \'hours\', diffString);\n        Ember.set(city, \'day\', isToday ? \'Today\' : isTomorrow ? \'Tomorrow\' : \'Yesterday\');\n        Ember.set(city, \'localTime\', localTime);\n        Ember.set(city, \'localTime2\', localTime2);\n      }\n    });\n\n\n    __exports__[\"default\"] = WorldclockController;\n  });//# sourceURL=clock-app/controllers/worldclock.js");

;eval("define(\"clock-app/models/city\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n     \n    var City = DS.Model.extend({\n      cityid: DS.attr(\'string\'),\n      cityName: DS.attr(\'string\'),\n      timezoneName: DS.attr(\'string\'),\n      timezoneOffset: DS.attr(\'number\')\n    });\n\n    __exports__[\"default\"] = City;\n  });//# sourceURL=clock-app/models/city.js");

;eval("define(\"clock-app/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: ClockAppENV.locationType\n    });\n\n    Router.map(function() {\n      this.route(\'worldclock\', {path: \'/\'});\n      this.route(\'timer\');\n      this.route(\'stopwatch\');\n      this.route(\'addcity\');\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=clock-app/router.js");

;eval("define(\"clock-app/routes/worldclock\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var WorldclockRoute = Ember.Route.extend({\n\n      cachedCities: null,\n      \n      model: function() {\n        return this.store.find(\'city\');\n      },\n      \n      setupController: function(controller, model) {\n        controller.set(\'content\', model);\n      }\n    });\n\n\n    __exports__[\"default\"] = WorldclockRoute;\n  });//# sourceURL=clock-app/routes/worldclock.js");

;eval("define(\"clock-app/templates/addcity\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n     \");\n      stack1 = helpers.each.call(depth0, \"cityList\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n   \");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n     <div class=\\\"category\\\">\\n      <span>\");\n      stack1 = helpers._triageMustache.call(depth0, \"firstLetter\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\\n     </div>\\n      <ul>\\n      \");\n      stack1 = helpers.each.call(depth0, \"dataList\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </ul>\\n      \");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      <li class=\\\"subList\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"addCity\", \"id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\"><div>\");\n      stack1 = helpers._triageMustache.call(depth0, \"cityName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div></li>\\n      \");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n    <p>\");\n      stack1 = helpers._triageMustache.call(depth0, \"displayMsg\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n    \");\n      return buffer;\n      }\n\n      data.buffer.push(\"<header id=\\\"cityList\\\">\\n  <div id=\\\"listTile\\\">\\n  Choose a City.\\n  </div>\\n  \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'id\': (\"listInput\"),\n        \'type\': (\"text\"),\n        \'value\': (\"typeCity\")\n      },hashTypes:{\'id\': \"STRING\",\'type\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'id\': depth0,\'type\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n  <button id=\\\"cancel\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"worldclock\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">Cancel</button>\\n</header>\\n<div class=\\\"listBody\\\">\\n   \");\n      stack1 = helpers[\'if\'].call(depth0, \"cityList\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=clock-app/templates/addcity.js");

;eval("define(\"clock-app/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=clock-app/templates/application.js");

;eval("define(\"clock-app/templates/stopwatch\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      <li>\\n        <p class=\\\"lap-label\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"lapLabel\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n        <p class=\\\"lap-time\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"lapTime\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n      </li>\\n      \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"<span>✈</span><br/> World Clock\");\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"<span>◴</span><br/>Timer\");\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"<span>◷</span><br/>Stopwatch\");\n      }\n\n      data.buffer.push(\"<div id=\\\"stopwatch\\\">\\n  <header>\\n    <h1>Stopwatch</h1>\\n  </header>\\n  <div class=\\\"stopwatch-content\\\">\\n    <div class=\\\"counter\\\">\\n      <p class=\\\"lap-time\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"currentLapTimeFormatted\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n      <p class=\\\"total-time\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"totalTimeFormatted\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n    </div>\\n    <div class=\\\"buttons\\\">\\n      <button class=\\\"button-start left-button\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"leftButton\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"leftButtonClass\")\n      },hashTypes:{\'class\': \"ID\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"leftButtonLabel\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</button>\\n      <button class=\\\"button-lap right-button\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"rightButton\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'disabled\': (\"rightButtonDisabled\"),\n        \'class\': (\"rightButtonClass\")\n      },hashTypes:{\'disabled\': \"ID\",\'class\': \"ID\"},hashContexts:{\'disabled\': depth0,\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"rightButtonLabel\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</button>\\n    </div>\\n    <ul class=\\\"laps\\\">\\n      \");\n      stack1 = helpers.each.call(depth0, {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </ul>\\n  </div>\\n</div>\\n<footer>\\n  <ul>\\n    <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"worldclock\", options) : helperMissing.call(depth0, \"link-to\", \"worldclock\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n    <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"timer\", options) : helperMissing.call(depth0, \"link-to\", \"timer\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n    <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"stopwatch\", options) : helperMissing.call(depth0, \"link-to\", \"stopwatch\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n  </ul>\\n</footer>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=clock-app/templates/stopwatch.js");

;eval("define(\"clock-app/templates/timer\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      <div class=\\\"counter\\\">\\n        <p class=\\\"total-time\\\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"totalTime\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n      </div>\\n    \");\n      return buffer;\n      }\n\n    function program3(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n      <div class=\\\"inputs\\\">\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'class\': (\"hours\"),\n        \'type\': (\"number\"),\n        \'max\': (\"100\"),\n        \'min\': (\"0\"),\n        \'value\': (\"hours\")\n      },hashTypes:{\'class\': \"STRING\",\'type\': \"STRING\",\'max\': \"STRING\",\'min\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'class\': depth0,\'type\': depth0,\'max\': depth0,\'min\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'class\': (\"minutes\"),\n        \'type\': (\"number\"),\n        \'max\': (\"59\"),\n        \'min\': (\"0\"),\n        \'value\': (\"minutes\")\n      },hashTypes:{\'class\': \"STRING\",\'type\': \"STRING\",\'max\': \"STRING\",\'min\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'class\': depth0,\'type\': depth0,\'max\': depth0,\'min\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n      </div>\\n    \");\n      return buffer;\n      }\n\n    function program5(depth0,data) {\n      \n      \n      data.buffer.push(\"<span>✈</span><br/> World Clock\");\n      }\n\n    function program7(depth0,data) {\n      \n      \n      data.buffer.push(\"<span>◴</span><br/>Timer\");\n      }\n\n    function program9(depth0,data) {\n      \n      \n      data.buffer.push(\"<span>◷</span><br/>Stopwatch\");\n      }\n\n      data.buffer.push(\"<div id=\\\"timer\\\">\\n  <header>\\n    <h1>Timer</h1>\\n  </header>\\n  <div class=\\\"timer-content\\\">\\n    \");\n      stack1 = helpers[\'if\'].call(depth0, \"hideInputs\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    <div class=\\\"buttons\\\">\\n      <button class=\\\"button-start left-button\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"leftButton\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"leftButtonLabel\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</button>\\n      <button class=\\\"button-lap right-button\\\" \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"rightButton\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'disabled\': (\"rightButtonDisabled\")\n      },hashTypes:{\'disabled\': \"ID\"},hashContexts:{\'disabled\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"rightButtonLabel\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</button>\\n    </div>\\n  </div>\\n</div>\\n<footer>\\n  <ul>\\n    <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"worldclock\", options) : helperMissing.call(depth0, \"link-to\", \"worldclock\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n    <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(7, program7, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"timer\", options) : helperMissing.call(depth0, \"link-to\", \"timer\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n    <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(9, program9, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"stopwatch\", options) : helperMissing.call(depth0, \"link-to\", \"stopwatch\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n  </ul>\\n</footer>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=clock-app/templates/timer.js");

;eval("define(\"clock-app/templates/worldclock\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n        <strong>Done</strong>\\n      \");\n      }\n\n    function program3(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n      Edit\\n      \");\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n      <li \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"displayCanvas\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n      <div \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"delete\", \"id\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"controller.edit:circle:noncircle\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n         <div id=\\\"dash\\\"></div>\\n      </div>\\n        <p \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"controller.edit:city-edit:city\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\");\n      stack1 = helpers._triageMustache.call(depth0, \"cityName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n        <p \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"controller.edit:time-details-edit:time-details\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n        <strong>\");\n      stack1 = helpers._triageMustache.call(depth0, \"day\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</strong>\");\n      stack1 = helpers[\'if\'].call(depth0, \"hours\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </p>\\n        \");\n      stack1 = helpers[\'if\'].call(depth0, \"controller.canvas\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(10, program10, data),fn:self.program(8, program8, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n      </li>\\n    \");\n      return buffer;\n      }\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"<span>, \");\n      stack1 = helpers._triageMustache.call(depth0, \"hours\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</span>\");\n      return buffer;\n      }\n\n    function program8(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n        <p \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":canvas-clock controller.edit:edit-canvas\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n        \");\n      data.buffer.push(escapeExpression((helper = helpers[\'canvas-clock\'] || (depth0 && depth0[\'canvas-clock\']),options={hash:{\n        \'data\': (\"localTime2\")\n      },hashTypes:{\'data\': \"ID\"},hashContexts:{\'data\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"canvas-clock\", options))));\n      data.buffer.push(\"\\n        </p>\\n        \");\n      return buffer;\n      }\n\n    function program10(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n        <p \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\":time controller.edit:time-edit\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n        \");\n      stack1 = helpers._triageMustache.call(depth0, \"localTime\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n        </p>\\n        \");\n      return buffer;\n      }\n\n    function program12(depth0,data) {\n      \n      \n      data.buffer.push(\"<span>✈</span><br/> World Clock\");\n      }\n\n    function program14(depth0,data) {\n      \n      \n      data.buffer.push(\"<span>◴</span><br/>Timer\");\n      }\n\n    function program16(depth0,data) {\n      \n      \n      data.buffer.push(\"<span>◷</span><br/>Stopwatch\");\n      }\n\n      data.buffer.push(\"<div id=\\\"worldclock\\\">\\n  <header>\\n  <button class=\\\"edit-title\\\"\");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"editCity\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n      \");\n      stack1 = helpers[\'if\'].call(depth0, \"edit\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n    </button>\\n    <h1>\\n    World Clock\\n    </h1>\\n    <button class=\\\"plus\\\"\");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"addcity\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">+</button>\\n  </header>\\n  <ul class=\\\"worldclock-list\\\">\\n    \");\n      stack1 = helpers.each.call(depth0, \"content\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(5, program5, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n  </ul>\\n</div>\\n<footer>\\n  <ul>\\n    <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(12, program12, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"worldclock\", options) : helperMissing.call(depth0, \"link-to\", \"worldclock\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n    <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(14, program14, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"timer\", options) : helperMissing.call(depth0, \"link-to\", \"timer\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n    <li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(16, program16, data),contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"stopwatch\", options) : helperMissing.call(depth0, \"link-to\", \"stopwatch\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n  </ul>\\n</footer>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=clock-app/templates/worldclock.js");

;eval("define(\"clock-app/tests/clock-app/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app/adapters\');\n    test(\'clock-app/adapters/application.js should pass jshint\', function() { \n      ok(true, \'clock-app/adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/adapters/application.jshint.js");

;eval("define(\"clock-app/tests/clock-app/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app\');\n    test(\'clock-app/app.js should pass jshint\', function() { \n      ok(true, \'clock-app/app.js should pass jshint.\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/app.jshint.js");

;eval("define(\"clock-app/tests/clock-app/components/canvas-clock.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app/components\');\n    test(\'clock-app/components/canvas-clock.js should pass jshint\', function() { \n      ok(true, \'clock-app/components/canvas-clock.js should pass jshint.\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/components/canvas-clock.jshint.js");

;eval("define(\"clock-app/tests/clock-app/controllers/addcity.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app/controllers\');\n    test(\'clock-app/controllers/addcity.js should pass jshint\', function() { \n      ok(false, \'clock-app/controllers/addcity.js should pass jshint.\\nclock-app/controllers/addcity.js: line 10, col 26, Expected \\\'===\\\' and instead saw \\\'==\\\'.\\nclock-app/controllers/addcity.js: line 24, col 47, Expected \\\'===\\\' and instead saw \\\'==\\\'.\\nclock-app/controllers/addcity.js: line 41, col 25, The object literal notation {} is preferable.\\nclock-app/controllers/addcity.js: line 19, col 9, \\\'$\\\' is not defined.\\n\\n4 errors\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/controllers/addcity.jshint.js");

;eval("define(\"clock-app/tests/clock-app/controllers/stopwatch.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app/controllers\');\n    test(\'clock-app/controllers/stopwatch.js should pass jshint\', function() { \n      ok(true, \'clock-app/controllers/stopwatch.js should pass jshint.\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/controllers/stopwatch.jshint.js");

;eval("define(\"clock-app/tests/clock-app/controllers/timer.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app/controllers\');\n    test(\'clock-app/controllers/timer.js should pass jshint\', function() { \n      ok(true, \'clock-app/controllers/timer.js should pass jshint.\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/controllers/timer.jshint.js");

;eval("define(\"clock-app/tests/clock-app/controllers/utils.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app/controllers\');\n    test(\'clock-app/controllers/utils.js should pass jshint\', function() { \n      ok(true, \'clock-app/controllers/utils.js should pass jshint.\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/controllers/utils.jshint.js");

;eval("define(\"clock-app/tests/clock-app/controllers/worldclock.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app/controllers\');\n    test(\'clock-app/controllers/worldclock.js should pass jshint\', function() { \n      ok(true, \'clock-app/controllers/worldclock.js should pass jshint.\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/controllers/worldclock.jshint.js");

;eval("define(\"clock-app/tests/clock-app/models/city.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app/models\');\n    test(\'clock-app/models/city.js should pass jshint\', function() { \n      ok(true, \'clock-app/models/city.js should pass jshint.\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/models/city.jshint.js");

;eval("define(\"clock-app/tests/clock-app/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app\');\n    test(\'clock-app/router.js should pass jshint\', function() { \n      ok(true, \'clock-app/router.js should pass jshint.\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/router.jshint.js");

;eval("define(\"clock-app/tests/clock-app/routes/worldclock.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app/routes\');\n    test(\'clock-app/routes/worldclock.js should pass jshint\', function() { \n      ok(true, \'clock-app/routes/worldclock.js should pass jshint.\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/routes/worldclock.jshint.js");

;eval("define(\"clock-app/tests/clock-app/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app/tests/helpers\');\n    test(\'clock-app/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'clock-app/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/tests/helpers/resolver.jshint.js");

;eval("define(\"clock-app/tests/clock-app/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app/tests/helpers\');\n    test(\'clock-app/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'clock-app/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/tests/helpers/start-app.jshint.js");

;eval("define(\"clock-app/tests/clock-app/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app/tests\');\n    test(\'clock-app/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'clock-app/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/tests/test-helper.jshint.js");

;eval("define(\"clock-app/tests/clock-app/views/circle.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - clock-app/views\');\n    test(\'clock-app/views/circle.js should pass jshint\', function() { \n      ok(false, \'clock-app/views/circle.js should pass jshint.\\nclock-app/views/circle.js: line 1, col 1, \\\'App\\\' is not defined.\\nclock-app/views/circle.js: line 1, col 18, \\\'Ember\\\' is not defined.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=clock-app/tests/clock-app/views/circle.jshint.js");

;eval("define(\"clock-app/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'clock-app\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=clock-app/tests/helpers/resolver.js");

;eval("define(\"clock-app/tests/helpers/start-app\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* global require */\n\n    var Application = require(\'clock-app/app\')[\'default\'];\n    var Router = require(\'clock-app/router\')[\'default\'];\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION:false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function(){\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=clock-app/tests/helpers/start-app.js");

;eval("define(\"clock-app/tests/test-helper\", \n  [\"clock-app/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n  });//# sourceURL=clock-app/tests/test-helper.js");

;eval("define(\"clock-app/views/circle\", \n  [],\n  function() {\n    \"use strict\";\n    App.CircleView = Ember.View.extend({\n      classNameBindings: [\'isEdit:circle:noncircle\'],\n      isEdit: false,\n      content: \'<div id=\"dash\"></div>\'\n    });\n  });//# sourceURL=clock-app/views/circle.js");
